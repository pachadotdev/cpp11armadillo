// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// 01_ols.cpp
doubles_matrix<> ols_mat_(const doubles_matrix<>& y, const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_ols_mat_(SEXP y, SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(ols_mat_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(y), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 01_ols.cpp
doubles ols_dbl_(const doubles_matrix<>& y, const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_ols_dbl_(SEXP y, SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(ols_dbl_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(y), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
doubles_matrix<> eigen_sym_mat_(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_sym_mat_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_sym_mat_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
doubles eigen_sym_dbl_(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_sym_dbl_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_sym_dbl_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
list eigen_gen_mat_(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_gen_mat_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_gen_mat_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
list eigen_gen_mat_complex_wrapper_(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_gen_mat_complex_wrapper_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_gen_mat_complex_wrapper_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
list eigen_gen_dbl_complex_wrapper_(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_gen_dbl_complex_wrapper_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_gen_dbl_complex_wrapper_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
list eigen_gen_no_wrapper_(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_gen_no_wrapper_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_gen_no_wrapper_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 03_chol.cpp
doubles_matrix<> chol_mat_(const doubles_matrix<>& x, std::string type);
extern "C" SEXP _cpp11armadillotest_chol_mat_(SEXP x, SEXP type) {
  BEGIN_CPP11
    return cpp11::as_sexp(chol_mat_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x), cpp11::as_cpp<cpp11::decay_t<std::string>>(type)));
  END_CPP11
}
// 04_qr.cpp
doubles_matrix<> ols_qr_mat_(const doubles_matrix<>& y, const doubles_matrix<>& x, const bool econ);
extern "C" SEXP _cpp11armadillotest_ols_qr_mat_(SEXP y, SEXP x, SEXP econ) {
  BEGIN_CPP11
    return cpp11::as_sexp(ols_qr_mat_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(y), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x), cpp11::as_cpp<cpp11::decay_t<const bool>>(econ)));
  END_CPP11
}
// 04_qr.cpp
doubles ols_qr_dbl_(const doubles_matrix<>& y, const doubles_matrix<>& x, const bool econ);
extern "C" SEXP _cpp11armadillotest_ols_qr_dbl_(SEXP y, SEXP x, SEXP econ) {
  BEGIN_CPP11
    return cpp11::as_sexp(ols_qr_dbl_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(y), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x), cpp11::as_cpp<cpp11::decay_t<const bool>>(econ)));
  END_CPP11
}
// 05_capm.cpp
doubles_matrix<> capm_(const doubles_matrix<>& r, const doubles_matrix<>& m, double f);
extern "C" SEXP _cpp11armadillotest_capm_(SEXP r, SEXP m, SEXP f) {
  BEGIN_CPP11
    return cpp11::as_sexp(capm_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(r), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(m), cpp11::as_cpp<cpp11::decay_t<double>>(f)));
  END_CPP11
}
// 06_typedefs.cpp
doubles typedef_Col_double_(const doubles& x);
extern "C" SEXP _cpp11armadillotest_typedef_Col_double_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_Col_double_(cpp11::as_cpp<cpp11::decay_t<const doubles&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
integers typedef_Col_int_(const integers& x);
extern "C" SEXP _cpp11armadillotest_typedef_Col_int_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_Col_int_(cpp11::as_cpp<cpp11::decay_t<const integers&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
integers typedef_uvec_(const integers& x);
extern "C" SEXP _cpp11armadillotest_typedef_uvec_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_uvec_(cpp11::as_cpp<cpp11::decay_t<const integers&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
doubles_matrix<> typedef_Mat_double_(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_typedef_Mat_double_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_Mat_double_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
integers_matrix<> typedef_Mat_int_(const integers_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_typedef_Mat_int_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_Mat_int_(cpp11::as_cpp<cpp11::decay_t<const integers_matrix<>&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
doubles_matrix<> typedef_SpMat_double_(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_typedef_SpMat_double_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_SpMat_double_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
integers_matrix<> typedef_SpMat_int_(const integers_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_typedef_SpMat_int_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_SpMat_int_(cpp11::as_cpp<cpp11::decay_t<const integers_matrix<>&>>(x)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_cpp11armadillotest_capm_",                          (DL_FUNC) &_cpp11armadillotest_capm_,                          3},
    {"_cpp11armadillotest_chol_mat_",                      (DL_FUNC) &_cpp11armadillotest_chol_mat_,                      2},
    {"_cpp11armadillotest_eigen_gen_dbl_complex_wrapper_", (DL_FUNC) &_cpp11armadillotest_eigen_gen_dbl_complex_wrapper_, 1},
    {"_cpp11armadillotest_eigen_gen_mat_",                 (DL_FUNC) &_cpp11armadillotest_eigen_gen_mat_,                 1},
    {"_cpp11armadillotest_eigen_gen_mat_complex_wrapper_", (DL_FUNC) &_cpp11armadillotest_eigen_gen_mat_complex_wrapper_, 1},
    {"_cpp11armadillotest_eigen_gen_no_wrapper_",          (DL_FUNC) &_cpp11armadillotest_eigen_gen_no_wrapper_,          1},
    {"_cpp11armadillotest_eigen_sym_dbl_",                 (DL_FUNC) &_cpp11armadillotest_eigen_sym_dbl_,                 1},
    {"_cpp11armadillotest_eigen_sym_mat_",                 (DL_FUNC) &_cpp11armadillotest_eigen_sym_mat_,                 1},
    {"_cpp11armadillotest_ols_dbl_",                       (DL_FUNC) &_cpp11armadillotest_ols_dbl_,                       2},
    {"_cpp11armadillotest_ols_mat_",                       (DL_FUNC) &_cpp11armadillotest_ols_mat_,                       2},
    {"_cpp11armadillotest_ols_qr_dbl_",                    (DL_FUNC) &_cpp11armadillotest_ols_qr_dbl_,                    3},
    {"_cpp11armadillotest_ols_qr_mat_",                    (DL_FUNC) &_cpp11armadillotest_ols_qr_mat_,                    3},
    {"_cpp11armadillotest_typedef_Col_double_",            (DL_FUNC) &_cpp11armadillotest_typedef_Col_double_,            1},
    {"_cpp11armadillotest_typedef_Col_int_",               (DL_FUNC) &_cpp11armadillotest_typedef_Col_int_,               1},
    {"_cpp11armadillotest_typedef_Mat_double_",            (DL_FUNC) &_cpp11armadillotest_typedef_Mat_double_,            1},
    {"_cpp11armadillotest_typedef_Mat_int_",               (DL_FUNC) &_cpp11armadillotest_typedef_Mat_int_,               1},
    {"_cpp11armadillotest_typedef_SpMat_double_",          (DL_FUNC) &_cpp11armadillotest_typedef_SpMat_double_,          1},
    {"_cpp11armadillotest_typedef_SpMat_int_",             (DL_FUNC) &_cpp11armadillotest_typedef_SpMat_int_,             1},
    {"_cpp11armadillotest_typedef_uvec_",                  (DL_FUNC) &_cpp11armadillotest_typedef_uvec_,                  1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_cpp11armadillotest(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
