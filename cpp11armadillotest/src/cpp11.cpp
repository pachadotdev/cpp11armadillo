// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// 01_ols.cpp
doubles_matrix<> ols_mat(const doubles_matrix<>& y, const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_ols_mat(SEXP y, SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(ols_mat(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(y), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 01_ols.cpp
doubles ols_dbl(const doubles_matrix<>& y, const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_ols_dbl(SEXP y, SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(ols_dbl(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(y), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
doubles_matrix<> eigen_sym_mat(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_sym_mat(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_sym_mat(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
doubles eigen_sym_dbl(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_sym_dbl(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_sym_dbl(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
list eigen_gen_mat(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_gen_mat(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_gen_mat(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
list eigen_gen_mat_complex_wrapper(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_gen_mat_complex_wrapper(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_gen_mat_complex_wrapper(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
list eigen_gen_dbl_complex_wrapper(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_gen_dbl_complex_wrapper(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_gen_dbl_complex_wrapper(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 02_eigen.cpp
list eigen_gen_no_wrapper(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_eigen_gen_no_wrapper(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(eigen_gen_no_wrapper(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 03_chol.cpp
doubles_matrix<> chol_mat(const doubles_matrix<>& x, std::string type);
extern "C" SEXP _cpp11armadillotest_chol_mat(SEXP x, SEXP type) {
  BEGIN_CPP11
    return cpp11::as_sexp(chol_mat(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x), cpp11::as_cpp<cpp11::decay_t<std::string>>(type)));
  END_CPP11
}
// 04_qr.cpp
doubles_matrix<> ols_qr_mat(const doubles_matrix<>& y, const doubles_matrix<>& x, const bool econ);
extern "C" SEXP _cpp11armadillotest_ols_qr_mat(SEXP y, SEXP x, SEXP econ) {
  BEGIN_CPP11
    return cpp11::as_sexp(ols_qr_mat(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(y), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x), cpp11::as_cpp<cpp11::decay_t<const bool>>(econ)));
  END_CPP11
}
// 04_qr.cpp
doubles ols_qr_dbl(const doubles_matrix<>& y, const doubles_matrix<>& x, const bool econ);
extern "C" SEXP _cpp11armadillotest_ols_qr_dbl(SEXP y, SEXP x, SEXP econ) {
  BEGIN_CPP11
    return cpp11::as_sexp(ols_qr_dbl(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(y), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x), cpp11::as_cpp<cpp11::decay_t<const bool>>(econ)));
  END_CPP11
}
// 05_capm.cpp
doubles_matrix<> capm(const doubles_matrix<>& r, const doubles_matrix<>& m, double f);
extern "C" SEXP _cpp11armadillotest_capm(SEXP r, SEXP m, SEXP f) {
  BEGIN_CPP11
    return cpp11::as_sexp(capm(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(r), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(m), cpp11::as_cpp<cpp11::decay_t<double>>(f)));
  END_CPP11
}
// 06_typedefs.cpp
doubles typedef_Col_double(const doubles& x);
extern "C" SEXP _cpp11armadillotest_typedef_Col_double(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_Col_double(cpp11::as_cpp<cpp11::decay_t<const doubles&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
integers typedef_Col_int(const integers& x);
extern "C" SEXP _cpp11armadillotest_typedef_Col_int(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_Col_int(cpp11::as_cpp<cpp11::decay_t<const integers&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
integers typedef_uvec(const integers& x);
extern "C" SEXP _cpp11armadillotest_typedef_uvec(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_uvec(cpp11::as_cpp<cpp11::decay_t<const integers&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
doubles_matrix<> typedef_Mat_double(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_typedef_Mat_double(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_Mat_double(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
integers_matrix<> typedef_Mat_int(const integers_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_typedef_Mat_int(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_Mat_int(cpp11::as_cpp<cpp11::decay_t<const integers_matrix<>&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
doubles_matrix<> typedef_SpMat_double(const doubles_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_typedef_SpMat_double(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_SpMat_double(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x)));
  END_CPP11
}
// 06_typedefs.cpp
integers_matrix<> typedef_SpMat_int(const integers_matrix<>& x);
extern "C" SEXP _cpp11armadillotest_typedef_SpMat_int(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(typedef_SpMat_int(cpp11::as_cpp<cpp11::decay_t<const integers_matrix<>&>>(x)));
  END_CPP11
}
// 07_reproducibility.cpp
integers_matrix<> random_matrix_nxn(const int& n);
extern "C" SEXP _cpp11armadillotest_random_matrix_nxn(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(random_matrix_nxn(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> matrix1_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_matrix1_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list matrix2_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_matrix2_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(matrix2_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles column1_(const doubles& x, const doubles& y);
extern "C" SEXP _cpp11armadillotest_column1_(SEXP x, SEXP y) {
  BEGIN_CPP11
    return cpp11::as_sexp(column1_(cpp11::as_cpp<cpp11::decay_t<const doubles&>>(x), cpp11::as_cpp<cpp11::decay_t<const doubles&>>(y)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles row1_(const doubles& x, const doubles& y);
extern "C" SEXP _cpp11armadillotest_row1_(SEXP x, SEXP y) {
  BEGIN_CPP11
    return cpp11::as_sexp(row1_(cpp11::as_cpp<cpp11::decay_t<const doubles&>>(x), cpp11::as_cpp<cpp11::decay_t<const doubles&>>(y)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> cube1_(const doubles_matrix<>& a, const doubles_matrix<>& b);
extern "C" SEXP _cpp11armadillotest_cube1_(SEXP a, SEXP b) {
  BEGIN_CPP11
    return cpp11::as_sexp(cube1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(b)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> field1_(const doubles_matrix<>& a, const doubles_matrix<>& b);
extern "C" SEXP _cpp11armadillotest_field1_(SEXP a, SEXP b) {
  BEGIN_CPP11
    return cpp11::as_sexp(field1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(b)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers attr1_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_attr1_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(attr1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> access1_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_access1_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(access1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> initialization1_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_initialization1_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(initialization1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> zeros1_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_zeros1_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(zeros1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> ones1_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_ones1_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(ones1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> eye1_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_eye1_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(eye1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> randu1_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_randu1_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(randu1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> randn1_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_randn1_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(randn1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> randu2_(const int& n);
extern "C" SEXP _cpp11armadillotest_randu2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(randu2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> randn2_(const int& n);
extern "C" SEXP _cpp11armadillotest_randn2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(randn2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> fill1_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_fill1_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(fill1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> imbue1_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_imbue1_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(imbue1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> imbue2_(const doubles_matrix<>& a);
extern "C" SEXP _cpp11armadillotest_imbue2_(SEXP a) {
  BEGIN_CPP11
    return cpp11::as_sexp(imbue2_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> clean1_(const int& n);
extern "C" SEXP _cpp11armadillotest_clean1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(clean1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> replace1_(const int& n);
extern "C" SEXP _cpp11armadillotest_replace1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(replace1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> clamp1_(const int& n);
extern "C" SEXP _cpp11armadillotest_clamp1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(clamp1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> transform1_(const int& n);
extern "C" SEXP _cpp11armadillotest_transform1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(transform1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> for_each1_(const int& n);
extern "C" SEXP _cpp11armadillotest_for_each1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(for_each1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles set_size1_(const int& n);
extern "C" SEXP _cpp11armadillotest_set_size1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(set_size1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> reshape1_(const int& n);
extern "C" SEXP _cpp11armadillotest_reshape1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(reshape1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> resize1_(const int& n);
extern "C" SEXP _cpp11armadillotest_resize1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(resize1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers copy_size1_(const int& n);
extern "C" SEXP _cpp11armadillotest_copy_size1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(copy_size1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers reset1_(const int& n);
extern "C" SEXP _cpp11armadillotest_reset1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(reset1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> subview1_(const int& n);
extern "C" SEXP _cpp11armadillotest_subview1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(subview1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> subview2_(const int& n);
extern "C" SEXP _cpp11armadillotest_subview2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(subview2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles diagonal1_(const int& n);
extern "C" SEXP _cpp11armadillotest_diagonal1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(diagonal1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> each_col1_(const int& n);
extern "C" SEXP _cpp11armadillotest_each_col1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(each_col1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> each_row1_(const int& n);
extern "C" SEXP _cpp11armadillotest_each_row1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(each_row1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> each_slice1_(const int& n);
extern "C" SEXP _cpp11armadillotest_each_slice1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(each_slice1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list set_real1_(const int& n);
extern "C" SEXP _cpp11armadillotest_set_real1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(set_real1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list set_real2_(const int& n);
extern "C" SEXP _cpp11armadillotest_set_real2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(set_real2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list set_imag1_(const int& n);
extern "C" SEXP _cpp11armadillotest_set_imag1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(set_imag1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> insert_columns1_(const int& n);
extern "C" SEXP _cpp11armadillotest_insert_columns1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(insert_columns1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> insert_rows1_(const int& n);
extern "C" SEXP _cpp11armadillotest_insert_rows1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(insert_rows1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> insert_slices1_(const int& n);
extern "C" SEXP _cpp11armadillotest_insert_slices1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(insert_slices1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> shed_columns1_(const int& n);
extern "C" SEXP _cpp11armadillotest_shed_columns1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(shed_columns1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> shed_rows1_(const int& n);
extern "C" SEXP _cpp11armadillotest_shed_rows1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(shed_rows1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> shed_slices1_(const int& n);
extern "C" SEXP _cpp11armadillotest_shed_slices1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(shed_slices1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> swap_columns1_(const int& n);
extern "C" SEXP _cpp11armadillotest_swap_columns1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(swap_columns1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> swap_rows1_(const int& n);
extern "C" SEXP _cpp11armadillotest_swap_rows1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(swap_rows1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> swap1_(const int& n);
extern "C" SEXP _cpp11armadillotest_swap1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(swap1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> memptr1_(const int& n);
extern "C" SEXP _cpp11armadillotest_memptr1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(memptr1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> colptr1_(const int& n);
extern "C" SEXP _cpp11armadillotest_colptr1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(colptr1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> iterators1_(const int& n);
extern "C" SEXP _cpp11armadillotest_iterators1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(iterators1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> iterators2_(const int& n);
extern "C" SEXP _cpp11armadillotest_iterators2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(iterators2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> iterators3_(const int& n);
extern "C" SEXP _cpp11armadillotest_iterators3_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(iterators3_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> iterators4_(const int& n);
extern "C" SEXP _cpp11armadillotest_iterators4_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(iterators4_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles compatibility1_(const int& n);
extern "C" SEXP _cpp11armadillotest_compatibility1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(compatibility1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers compatibility2_(const int& n);
extern "C" SEXP _cpp11armadillotest_compatibility2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(compatibility2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles as_col1_(const int& n);
extern "C" SEXP _cpp11armadillotest_as_col1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(as_col1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles as_row1_(const int& n);
extern "C" SEXP _cpp11armadillotest_as_row1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(as_row1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list col_as_mat1_(const int& n);
extern "C" SEXP _cpp11armadillotest_col_as_mat1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(col_as_mat1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list row_as_mat1_(const int& n);
extern "C" SEXP _cpp11armadillotest_row_as_mat1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(row_as_mat1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles as_dense1_(const int& n);
extern "C" SEXP _cpp11armadillotest_as_dense1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(as_dense1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> transpose1_(const int& n);
extern "C" SEXP _cpp11armadillotest_transpose1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(transpose1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> transpose2_(const int& n);
extern "C" SEXP _cpp11armadillotest_transpose2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(transpose2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles inverse1_(const doubles_matrix<>& a, const doubles b);
extern "C" SEXP _cpp11armadillotest_inverse1_(SEXP a, SEXP b) {
  BEGIN_CPP11
    return cpp11::as_sexp(inverse1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(a), cpp11::as_cpp<cpp11::decay_t<const doubles>>(b)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles maxmin1_(const int& n);
extern "C" SEXP _cpp11armadillotest_maxmin1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(maxmin1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles index_maxmin1_(const int& n);
extern "C" SEXP _cpp11armadillotest_index_maxmin1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(index_maxmin1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals in_range1_(const int& n);
extern "C" SEXP _cpp11armadillotest_in_range1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(in_range1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals is_empty1_(const int& n);
extern "C" SEXP _cpp11armadillotest_is_empty1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(is_empty1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals is_vec1_(const int& n);
extern "C" SEXP _cpp11armadillotest_is_vec1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(is_vec1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals is_sorted1_(const int& n);
extern "C" SEXP _cpp11armadillotest_is_sorted1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(is_sorted1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals is_triangular1_(const int& n);
extern "C" SEXP _cpp11armadillotest_is_triangular1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(is_triangular1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals is_diagonal1_(const int& n);
extern "C" SEXP _cpp11armadillotest_is_diagonal1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(is_diagonal1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals is_square1_(const int& n);
extern "C" SEXP _cpp11armadillotest_is_square1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(is_square1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals is_symmetric1_(const int& n);
extern "C" SEXP _cpp11armadillotest_is_symmetric1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(is_symmetric1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals is_hermitian1_(const int& n);
extern "C" SEXP _cpp11armadillotest_is_hermitian1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(is_hermitian1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals is_sympd1_(const int& n);
extern "C" SEXP _cpp11armadillotest_is_sympd1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(is_sympd1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals is_zero1_(const int& n);
extern "C" SEXP _cpp11armadillotest_is_zero1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(is_zero1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals is_finite1_(const int& n);
extern "C" SEXP _cpp11armadillotest_is_finite1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(is_finite1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals has_inf1_(const int& n);
extern "C" SEXP _cpp11armadillotest_has_inf1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(has_inf1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals has_nan1_(const int& n);
extern "C" SEXP _cpp11armadillotest_has_nan1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(has_nan1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles linspace1_(const int& n);
extern "C" SEXP _cpp11armadillotest_linspace1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(linspace1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles logspace1_(const int& n);
extern "C" SEXP _cpp11armadillotest_logspace1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(logspace1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles regspace1_(const double& delta);
extern "C" SEXP _cpp11armadillotest_regspace1_(SEXP delta) {
  BEGIN_CPP11
    return cpp11::as_sexp(regspace1_(cpp11::as_cpp<cpp11::decay_t<const double&>>(delta)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers randperm1_(const int& n, const int& m);
extern "C" SEXP _cpp11armadillotest_randperm1_(SEXP n, SEXP m) {
  BEGIN_CPP11
    return cpp11::as_sexp(randperm1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n), cpp11::as_cpp<cpp11::decay_t<const int&>>(m)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> eye2_(const int& n);
extern "C" SEXP _cpp11armadillotest_eye2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(eye2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> ones2_(const int& n);
extern "C" SEXP _cpp11armadillotest_ones2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(ones2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> zeros2_(const int& n);
extern "C" SEXP _cpp11armadillotest_zeros2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(zeros2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> randu3_(const int& n);
extern "C" SEXP _cpp11armadillotest_randu3_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(randu3_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> randn3_(const int& n);
extern "C" SEXP _cpp11armadillotest_randn3_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(randn3_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> randg3_(const int& n);
extern "C" SEXP _cpp11armadillotest_randg3_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(randg3_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> speye1_(const int& n);
extern "C" SEXP _cpp11armadillotest_speye1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(speye1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> spones1_(const int& n);
extern "C" SEXP _cpp11armadillotest_spones1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(spones1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> sprandu1_(const int& n);
extern "C" SEXP _cpp11armadillotest_sprandu1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(sprandu1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> sprandn1_(const int& n);
extern "C" SEXP _cpp11armadillotest_sprandn1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(sprandn1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> toeplitz1_(const int& n);
extern "C" SEXP _cpp11armadillotest_toeplitz1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(toeplitz1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> abs1_(const int& n);
extern "C" SEXP _cpp11armadillotest_abs1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(abs1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
double accu1_(const int& n);
extern "C" SEXP _cpp11armadillotest_accu1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(accu1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles affmul1_(const int& n);
extern "C" SEXP _cpp11armadillotest_affmul1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(affmul1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals all1_(const int& n);
extern "C" SEXP _cpp11armadillotest_all1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(all1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
logicals any1_(const int& n);
extern "C" SEXP _cpp11armadillotest_any1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(any1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
bool approx_equal1_(const int& n);
extern "C" SEXP _cpp11armadillotest_approx_equal1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(approx_equal1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> arg1_(const int& n);
extern "C" SEXP _cpp11armadillotest_arg1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(arg1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
double as_scalar1_(const int& n);
extern "C" SEXP _cpp11armadillotest_as_scalar1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(as_scalar1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> clamp2_(const int& n);
extern "C" SEXP _cpp11armadillotest_clamp2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(clamp2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
double cond1_(const int& n);
extern "C" SEXP _cpp11armadillotest_cond1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(cond1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list conj1_(const int& n);
extern "C" SEXP _cpp11armadillotest_conj1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(conj1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles conv_to1_(const int& n);
extern "C" SEXP _cpp11armadillotest_conv_to1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(conv_to1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles cross1_(const int& n);
extern "C" SEXP _cpp11armadillotest_cross1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(cross1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles cumsum1_(const int& n);
extern "C" SEXP _cpp11armadillotest_cumsum1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(cumsum1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles cumprod1_(const int& n);
extern "C" SEXP _cpp11armadillotest_cumprod1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(cumprod1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles det1_(const int& n);
extern "C" SEXP _cpp11armadillotest_det1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(det1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> diagmat1_(const int& n);
extern "C" SEXP _cpp11armadillotest_diagmat1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(diagmat1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles diagvec1_(const int& n);
extern "C" SEXP _cpp11armadillotest_diagvec1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(diagvec1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> diags1_(const int& n);
extern "C" SEXP _cpp11armadillotest_diags1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(diags1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> spdiags1_(const int& n);
extern "C" SEXP _cpp11armadillotest_spdiags1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(spdiags1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> diff1_(const int& n);
extern "C" SEXP _cpp11armadillotest_diff1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(diff1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles dot1_(const int& n);
extern "C" SEXP _cpp11armadillotest_dot1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(dot1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> eps1_(const int& n);
extern "C" SEXP _cpp11armadillotest_eps1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(eps1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> expmat1_(const int& n);
extern "C" SEXP _cpp11armadillotest_expmat1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(expmat1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> expmat_sym1_(const int& n);
extern "C" SEXP _cpp11armadillotest_expmat_sym1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(expmat_sym1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list find1_(const int& n);
extern "C" SEXP _cpp11armadillotest_find1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(find1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers find_finite1_(const int& n);
extern "C" SEXP _cpp11armadillotest_find_finite1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(find_finite1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers find_nonfinite1_(const int& n);
extern "C" SEXP _cpp11armadillotest_find_nonfinite1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(find_nonfinite1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers find_nan1_(const int& n);
extern "C" SEXP _cpp11armadillotest_find_nan1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(find_nan1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers find_unique1_(const int& n);
extern "C" SEXP _cpp11armadillotest_find_unique1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(find_unique1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list flip1_(const int& n);
extern "C" SEXP _cpp11armadillotest_flip1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(flip1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list imag1_(const int& n);
extern "C" SEXP _cpp11armadillotest_imag1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(imag1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list ind2sub1_(const int& n);
extern "C" SEXP _cpp11armadillotest_ind2sub1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(ind2sub1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles index_min1_(const int& n);
extern "C" SEXP _cpp11armadillotest_index_min1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(index_min1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> inplace_trans1_(const int& n);
extern "C" SEXP _cpp11armadillotest_inplace_trans1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(inplace_trans1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list inplace_strans1_(const int& n);
extern "C" SEXP _cpp11armadillotest_inplace_strans1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(inplace_strans1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers intersect1_(const int& n);
extern "C" SEXP _cpp11armadillotest_intersect1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(intersect1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list join_rows1_(const int& n);
extern "C" SEXP _cpp11armadillotest_join_rows1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(join_rows1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list join_cubes1_(const int& n);
extern "C" SEXP _cpp11armadillotest_join_cubes1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(join_cubes1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> kron1_(const int& n);
extern "C" SEXP _cpp11armadillotest_kron1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(kron1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list log_det1_(const int& n);
extern "C" SEXP _cpp11armadillotest_log_det1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(log_det1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list log_det_sympd1_(const int& n);
extern "C" SEXP _cpp11armadillotest_log_det_sympd1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(log_det_sympd1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list logmat1_(const int& n);
extern "C" SEXP _cpp11armadillotest_logmat1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(logmat1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list logmat_sympd1_(const int& n);
extern "C" SEXP _cpp11armadillotest_logmat_sympd1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(logmat_sympd1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list max1_(const int& n);
extern "C" SEXP _cpp11armadillotest_max1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(max1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles nonzeros1_(const int& n);
extern "C" SEXP _cpp11armadillotest_nonzeros1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(nonzeros1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles norm1_(const int& n);
extern "C" SEXP _cpp11armadillotest_norm1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(norm1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles norm2est1_(const int& n);
extern "C" SEXP _cpp11armadillotest_norm2est1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(norm2est1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list normalise1_(const int& n);
extern "C" SEXP _cpp11armadillotest_normalise1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(normalise1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list pow1_(const int& n);
extern "C" SEXP _cpp11armadillotest_pow1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(pow1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list powmat1_(const int& n);
extern "C" SEXP _cpp11armadillotest_powmat1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(powmat1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list prod1_(const int& n);
extern "C" SEXP _cpp11armadillotest_prod1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(prod1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list rank1_(const int& n);
extern "C" SEXP _cpp11armadillotest_rank1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(rank1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles rcond1_(const int& n);
extern "C" SEXP _cpp11armadillotest_rcond1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(rcond1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list repelem1_(const int& n);
extern "C" SEXP _cpp11armadillotest_repelem1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(repelem1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list repmat1_(const int& n);
extern "C" SEXP _cpp11armadillotest_repmat1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(repmat1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list reshape2_(const int& n);
extern "C" SEXP _cpp11armadillotest_reshape2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(reshape2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list resize2_(const int& n);
extern "C" SEXP _cpp11armadillotest_resize2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(resize2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list reverse1_(const int& n);
extern "C" SEXP _cpp11armadillotest_reverse1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(reverse1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list roots1_(const int& n);
extern "C" SEXP _cpp11armadillotest_roots1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(roots1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list shift1_(const int& n);
extern "C" SEXP _cpp11armadillotest_shift1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(shift1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list shuffle1_(const int& n);
extern "C" SEXP _cpp11armadillotest_shuffle1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(shuffle1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list size1_(const int& n);
extern "C" SEXP _cpp11armadillotest_size1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(size1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list sort1_(const int& n);
extern "C" SEXP _cpp11armadillotest_sort1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(sort1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list sort_index1_(const int& n);
extern "C" SEXP _cpp11armadillotest_sort_index1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(sort_index1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list sqrtmat1_(const int& n);
extern "C" SEXP _cpp11armadillotest_sqrtmat1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(sqrtmat1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> sqrtmat_sympd1_(const int& n);
extern "C" SEXP _cpp11armadillotest_sqrtmat_sympd1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(sqrtmat_sympd1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list sum1_(const int& n);
extern "C" SEXP _cpp11armadillotest_sum1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(sum1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list sum2_(const int& n);
extern "C" SEXP _cpp11armadillotest_sum2_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(sum2_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers sub2ind1_(const int& n);
extern "C" SEXP _cpp11armadillotest_sub2ind1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(sub2ind1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> symmatu1_(const int& n);
extern "C" SEXP _cpp11armadillotest_symmatu1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(symmatu1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles trace1_(const int& n);
extern "C" SEXP _cpp11armadillotest_trace1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(trace1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list trans1_(const int& n);
extern "C" SEXP _cpp11armadillotest_trans1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(trans1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> trapz1_(const int& n);
extern "C" SEXP _cpp11armadillotest_trapz1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(trapz1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles_matrix<> trimatu1_(const int& n);
extern "C" SEXP _cpp11armadillotest_trimatu1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(trimatu1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
integers trimatu_ind1_(const int& n);
extern "C" SEXP _cpp11armadillotest_trimatu_ind1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(trimatu_ind1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles unique1_(const int& n);
extern "C" SEXP _cpp11armadillotest_unique1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(unique1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list vecnorm1_(const int& n);
extern "C" SEXP _cpp11armadillotest_vecnorm1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(vecnorm1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
doubles vectorise1_(const int& n);
extern "C" SEXP _cpp11armadillotest_vectorise1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(vectorise1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list misc1_(const int& n);
extern "C" SEXP _cpp11armadillotest_misc1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(misc1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list trig1_(const int& n);
extern "C" SEXP _cpp11armadillotest_trig1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(trig1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list mean1_(const doubles_matrix<>& X, const doubles_matrix<>& Y);
extern "C" SEXP _cpp11armadillotest_mean1_(SEXP X, SEXP Y) {
  BEGIN_CPP11
    return cpp11::as_sexp(mean1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(X), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(Y)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list median1_(const doubles_matrix<>& X, const doubles_matrix<>& Y);
extern "C" SEXP _cpp11armadillotest_median1_(SEXP X, SEXP Y) {
  BEGIN_CPP11
    return cpp11::as_sexp(median1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(X), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(Y)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list stddev1_(const doubles_matrix<>& X, const doubles_matrix<>& Y);
extern "C" SEXP _cpp11armadillotest_stddev1_(SEXP X, SEXP Y) {
  BEGIN_CPP11
    return cpp11::as_sexp(stddev1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(X), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(Y)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list var1_(const doubles_matrix<>& X, const doubles_matrix<>& Y);
extern "C" SEXP _cpp11armadillotest_var1_(SEXP X, SEXP Y) {
  BEGIN_CPP11
    return cpp11::as_sexp(var1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(X), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(Y)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list range1_(const doubles_matrix<>& X, const doubles_matrix<>& Y);
extern "C" SEXP _cpp11armadillotest_range1_(SEXP X, SEXP Y) {
  BEGIN_CPP11
    return cpp11::as_sexp(range1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(X), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(Y)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list cov1_(const doubles_matrix<>& X, const doubles_matrix<>& Y);
extern "C" SEXP _cpp11armadillotest_cov1_(SEXP X, SEXP Y) {
  BEGIN_CPP11
    return cpp11::as_sexp(cov1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(X), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(Y)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list cor1_(const doubles_matrix<>& X, const doubles_matrix<>& Y);
extern "C" SEXP _cpp11armadillotest_cor1_(SEXP X, SEXP Y) {
  BEGIN_CPP11
    return cpp11::as_sexp(cor1_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(X), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(Y)));
  END_CPP11
}
// 08_official_documentation_adapted.cpp
list hist1_(const int& n);
extern "C" SEXP _cpp11armadillotest_hist1_(SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(hist1_(cpp11::as_cpp<cpp11::decay_t<const int&>>(n)));
  END_CPP11
}
// 09_regression.cpp
doubles ols_(const doubles_matrix<>& x, const doubles& y);
extern "C" SEXP _cpp11armadillotest_ols_(SEXP x, SEXP y) {
  BEGIN_CPP11
    return cpp11::as_sexp(ols_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x), cpp11::as_cpp<cpp11::decay_t<const doubles&>>(y)));
  END_CPP11
}
// 09_regression.cpp
doubles poisson_(const doubles_matrix<>& x, const doubles& y);
extern "C" SEXP _cpp11armadillotest_poisson_(SEXP x, SEXP y) {
  BEGIN_CPP11
    return cpp11::as_sexp(poisson_(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x), cpp11::as_cpp<cpp11::decay_t<const doubles&>>(y)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_cpp11armadillotest_abs1_",                         (DL_FUNC) &_cpp11armadillotest_abs1_,                         1},
    {"_cpp11armadillotest_access1_",                      (DL_FUNC) &_cpp11armadillotest_access1_,                      1},
    {"_cpp11armadillotest_accu1_",                        (DL_FUNC) &_cpp11armadillotest_accu1_,                        1},
    {"_cpp11armadillotest_affmul1_",                      (DL_FUNC) &_cpp11armadillotest_affmul1_,                      1},
    {"_cpp11armadillotest_all1_",                         (DL_FUNC) &_cpp11armadillotest_all1_,                         1},
    {"_cpp11armadillotest_any1_",                         (DL_FUNC) &_cpp11armadillotest_any1_,                         1},
    {"_cpp11armadillotest_approx_equal1_",                (DL_FUNC) &_cpp11armadillotest_approx_equal1_,                1},
    {"_cpp11armadillotest_arg1_",                         (DL_FUNC) &_cpp11armadillotest_arg1_,                         1},
    {"_cpp11armadillotest_as_col1_",                      (DL_FUNC) &_cpp11armadillotest_as_col1_,                      1},
    {"_cpp11armadillotest_as_dense1_",                    (DL_FUNC) &_cpp11armadillotest_as_dense1_,                    1},
    {"_cpp11armadillotest_as_row1_",                      (DL_FUNC) &_cpp11armadillotest_as_row1_,                      1},
    {"_cpp11armadillotest_as_scalar1_",                   (DL_FUNC) &_cpp11armadillotest_as_scalar1_,                   1},
    {"_cpp11armadillotest_attr1_",                        (DL_FUNC) &_cpp11armadillotest_attr1_,                        1},
    {"_cpp11armadillotest_capm",                          (DL_FUNC) &_cpp11armadillotest_capm,                          3},
    {"_cpp11armadillotest_chol_mat",                      (DL_FUNC) &_cpp11armadillotest_chol_mat,                      2},
    {"_cpp11armadillotest_clamp1_",                       (DL_FUNC) &_cpp11armadillotest_clamp1_,                       1},
    {"_cpp11armadillotest_clamp2_",                       (DL_FUNC) &_cpp11armadillotest_clamp2_,                       1},
    {"_cpp11armadillotest_clean1_",                       (DL_FUNC) &_cpp11armadillotest_clean1_,                       1},
    {"_cpp11armadillotest_col_as_mat1_",                  (DL_FUNC) &_cpp11armadillotest_col_as_mat1_,                  1},
    {"_cpp11armadillotest_colptr1_",                      (DL_FUNC) &_cpp11armadillotest_colptr1_,                      1},
    {"_cpp11armadillotest_column1_",                      (DL_FUNC) &_cpp11armadillotest_column1_,                      2},
    {"_cpp11armadillotest_compatibility1_",               (DL_FUNC) &_cpp11armadillotest_compatibility1_,               1},
    {"_cpp11armadillotest_compatibility2_",               (DL_FUNC) &_cpp11armadillotest_compatibility2_,               1},
    {"_cpp11armadillotest_cond1_",                        (DL_FUNC) &_cpp11armadillotest_cond1_,                        1},
    {"_cpp11armadillotest_conj1_",                        (DL_FUNC) &_cpp11armadillotest_conj1_,                        1},
    {"_cpp11armadillotest_conv_to1_",                     (DL_FUNC) &_cpp11armadillotest_conv_to1_,                     1},
    {"_cpp11armadillotest_copy_size1_",                   (DL_FUNC) &_cpp11armadillotest_copy_size1_,                   1},
    {"_cpp11armadillotest_cor1_",                         (DL_FUNC) &_cpp11armadillotest_cor1_,                         2},
    {"_cpp11armadillotest_cov1_",                         (DL_FUNC) &_cpp11armadillotest_cov1_,                         2},
    {"_cpp11armadillotest_cross1_",                       (DL_FUNC) &_cpp11armadillotest_cross1_,                       1},
    {"_cpp11armadillotest_cube1_",                        (DL_FUNC) &_cpp11armadillotest_cube1_,                        2},
    {"_cpp11armadillotest_cumprod1_",                     (DL_FUNC) &_cpp11armadillotest_cumprod1_,                     1},
    {"_cpp11armadillotest_cumsum1_",                      (DL_FUNC) &_cpp11armadillotest_cumsum1_,                      1},
    {"_cpp11armadillotest_det1_",                         (DL_FUNC) &_cpp11armadillotest_det1_,                         1},
    {"_cpp11armadillotest_diagmat1_",                     (DL_FUNC) &_cpp11armadillotest_diagmat1_,                     1},
    {"_cpp11armadillotest_diagonal1_",                    (DL_FUNC) &_cpp11armadillotest_diagonal1_,                    1},
    {"_cpp11armadillotest_diags1_",                       (DL_FUNC) &_cpp11armadillotest_diags1_,                       1},
    {"_cpp11armadillotest_diagvec1_",                     (DL_FUNC) &_cpp11armadillotest_diagvec1_,                     1},
    {"_cpp11armadillotest_diff1_",                        (DL_FUNC) &_cpp11armadillotest_diff1_,                        1},
    {"_cpp11armadillotest_dot1_",                         (DL_FUNC) &_cpp11armadillotest_dot1_,                         1},
    {"_cpp11armadillotest_each_col1_",                    (DL_FUNC) &_cpp11armadillotest_each_col1_,                    1},
    {"_cpp11armadillotest_each_row1_",                    (DL_FUNC) &_cpp11armadillotest_each_row1_,                    1},
    {"_cpp11armadillotest_each_slice1_",                  (DL_FUNC) &_cpp11armadillotest_each_slice1_,                  1},
    {"_cpp11armadillotest_eigen_gen_dbl_complex_wrapper", (DL_FUNC) &_cpp11armadillotest_eigen_gen_dbl_complex_wrapper, 1},
    {"_cpp11armadillotest_eigen_gen_mat",                 (DL_FUNC) &_cpp11armadillotest_eigen_gen_mat,                 1},
    {"_cpp11armadillotest_eigen_gen_mat_complex_wrapper", (DL_FUNC) &_cpp11armadillotest_eigen_gen_mat_complex_wrapper, 1},
    {"_cpp11armadillotest_eigen_gen_no_wrapper",          (DL_FUNC) &_cpp11armadillotest_eigen_gen_no_wrapper,          1},
    {"_cpp11armadillotest_eigen_sym_dbl",                 (DL_FUNC) &_cpp11armadillotest_eigen_sym_dbl,                 1},
    {"_cpp11armadillotest_eigen_sym_mat",                 (DL_FUNC) &_cpp11armadillotest_eigen_sym_mat,                 1},
    {"_cpp11armadillotest_eps1_",                         (DL_FUNC) &_cpp11armadillotest_eps1_,                         1},
    {"_cpp11armadillotest_expmat1_",                      (DL_FUNC) &_cpp11armadillotest_expmat1_,                      1},
    {"_cpp11armadillotest_expmat_sym1_",                  (DL_FUNC) &_cpp11armadillotest_expmat_sym1_,                  1},
    {"_cpp11armadillotest_eye1_",                         (DL_FUNC) &_cpp11armadillotest_eye1_,                         1},
    {"_cpp11armadillotest_eye2_",                         (DL_FUNC) &_cpp11armadillotest_eye2_,                         1},
    {"_cpp11armadillotest_field1_",                       (DL_FUNC) &_cpp11armadillotest_field1_,                       2},
    {"_cpp11armadillotest_fill1_",                        (DL_FUNC) &_cpp11armadillotest_fill1_,                        1},
    {"_cpp11armadillotest_find1_",                        (DL_FUNC) &_cpp11armadillotest_find1_,                        1},
    {"_cpp11armadillotest_find_finite1_",                 (DL_FUNC) &_cpp11armadillotest_find_finite1_,                 1},
    {"_cpp11armadillotest_find_nan1_",                    (DL_FUNC) &_cpp11armadillotest_find_nan1_,                    1},
    {"_cpp11armadillotest_find_nonfinite1_",              (DL_FUNC) &_cpp11armadillotest_find_nonfinite1_,              1},
    {"_cpp11armadillotest_find_unique1_",                 (DL_FUNC) &_cpp11armadillotest_find_unique1_,                 1},
    {"_cpp11armadillotest_flip1_",                        (DL_FUNC) &_cpp11armadillotest_flip1_,                        1},
    {"_cpp11armadillotest_for_each1_",                    (DL_FUNC) &_cpp11armadillotest_for_each1_,                    1},
    {"_cpp11armadillotest_has_inf1_",                     (DL_FUNC) &_cpp11armadillotest_has_inf1_,                     1},
    {"_cpp11armadillotest_has_nan1_",                     (DL_FUNC) &_cpp11armadillotest_has_nan1_,                     1},
    {"_cpp11armadillotest_hist1_",                        (DL_FUNC) &_cpp11armadillotest_hist1_,                        1},
    {"_cpp11armadillotest_imag1_",                        (DL_FUNC) &_cpp11armadillotest_imag1_,                        1},
    {"_cpp11armadillotest_imbue1_",                       (DL_FUNC) &_cpp11armadillotest_imbue1_,                       1},
    {"_cpp11armadillotest_imbue2_",                       (DL_FUNC) &_cpp11armadillotest_imbue2_,                       1},
    {"_cpp11armadillotest_in_range1_",                    (DL_FUNC) &_cpp11armadillotest_in_range1_,                    1},
    {"_cpp11armadillotest_ind2sub1_",                     (DL_FUNC) &_cpp11armadillotest_ind2sub1_,                     1},
    {"_cpp11armadillotest_index_maxmin1_",                (DL_FUNC) &_cpp11armadillotest_index_maxmin1_,                1},
    {"_cpp11armadillotest_index_min1_",                   (DL_FUNC) &_cpp11armadillotest_index_min1_,                   1},
    {"_cpp11armadillotest_initialization1_",              (DL_FUNC) &_cpp11armadillotest_initialization1_,              1},
    {"_cpp11armadillotest_inplace_strans1_",              (DL_FUNC) &_cpp11armadillotest_inplace_strans1_,              1},
    {"_cpp11armadillotest_inplace_trans1_",               (DL_FUNC) &_cpp11armadillotest_inplace_trans1_,               1},
    {"_cpp11armadillotest_insert_columns1_",              (DL_FUNC) &_cpp11armadillotest_insert_columns1_,              1},
    {"_cpp11armadillotest_insert_rows1_",                 (DL_FUNC) &_cpp11armadillotest_insert_rows1_,                 1},
    {"_cpp11armadillotest_insert_slices1_",               (DL_FUNC) &_cpp11armadillotest_insert_slices1_,               1},
    {"_cpp11armadillotest_intersect1_",                   (DL_FUNC) &_cpp11armadillotest_intersect1_,                   1},
    {"_cpp11armadillotest_inverse1_",                     (DL_FUNC) &_cpp11armadillotest_inverse1_,                     2},
    {"_cpp11armadillotest_is_diagonal1_",                 (DL_FUNC) &_cpp11armadillotest_is_diagonal1_,                 1},
    {"_cpp11armadillotest_is_empty1_",                    (DL_FUNC) &_cpp11armadillotest_is_empty1_,                    1},
    {"_cpp11armadillotest_is_finite1_",                   (DL_FUNC) &_cpp11armadillotest_is_finite1_,                   1},
    {"_cpp11armadillotest_is_hermitian1_",                (DL_FUNC) &_cpp11armadillotest_is_hermitian1_,                1},
    {"_cpp11armadillotest_is_sorted1_",                   (DL_FUNC) &_cpp11armadillotest_is_sorted1_,                   1},
    {"_cpp11armadillotest_is_square1_",                   (DL_FUNC) &_cpp11armadillotest_is_square1_,                   1},
    {"_cpp11armadillotest_is_symmetric1_",                (DL_FUNC) &_cpp11armadillotest_is_symmetric1_,                1},
    {"_cpp11armadillotest_is_sympd1_",                    (DL_FUNC) &_cpp11armadillotest_is_sympd1_,                    1},
    {"_cpp11armadillotest_is_triangular1_",               (DL_FUNC) &_cpp11armadillotest_is_triangular1_,               1},
    {"_cpp11armadillotest_is_vec1_",                      (DL_FUNC) &_cpp11armadillotest_is_vec1_,                      1},
    {"_cpp11armadillotest_is_zero1_",                     (DL_FUNC) &_cpp11armadillotest_is_zero1_,                     1},
    {"_cpp11armadillotest_iterators1_",                   (DL_FUNC) &_cpp11armadillotest_iterators1_,                   1},
    {"_cpp11armadillotest_iterators2_",                   (DL_FUNC) &_cpp11armadillotest_iterators2_,                   1},
    {"_cpp11armadillotest_iterators3_",                   (DL_FUNC) &_cpp11armadillotest_iterators3_,                   1},
    {"_cpp11armadillotest_iterators4_",                   (DL_FUNC) &_cpp11armadillotest_iterators4_,                   1},
    {"_cpp11armadillotest_join_cubes1_",                  (DL_FUNC) &_cpp11armadillotest_join_cubes1_,                  1},
    {"_cpp11armadillotest_join_rows1_",                   (DL_FUNC) &_cpp11armadillotest_join_rows1_,                   1},
    {"_cpp11armadillotest_kron1_",                        (DL_FUNC) &_cpp11armadillotest_kron1_,                        1},
    {"_cpp11armadillotest_linspace1_",                    (DL_FUNC) &_cpp11armadillotest_linspace1_,                    1},
    {"_cpp11armadillotest_log_det1_",                     (DL_FUNC) &_cpp11armadillotest_log_det1_,                     1},
    {"_cpp11armadillotest_log_det_sympd1_",               (DL_FUNC) &_cpp11armadillotest_log_det_sympd1_,               1},
    {"_cpp11armadillotest_logmat1_",                      (DL_FUNC) &_cpp11armadillotest_logmat1_,                      1},
    {"_cpp11armadillotest_logmat_sympd1_",                (DL_FUNC) &_cpp11armadillotest_logmat_sympd1_,                1},
    {"_cpp11armadillotest_logspace1_",                    (DL_FUNC) &_cpp11armadillotest_logspace1_,                    1},
    {"_cpp11armadillotest_matrix1_",                      (DL_FUNC) &_cpp11armadillotest_matrix1_,                      1},
    {"_cpp11armadillotest_matrix2_",                      (DL_FUNC) &_cpp11armadillotest_matrix2_,                      1},
    {"_cpp11armadillotest_max1_",                         (DL_FUNC) &_cpp11armadillotest_max1_,                         1},
    {"_cpp11armadillotest_maxmin1_",                      (DL_FUNC) &_cpp11armadillotest_maxmin1_,                      1},
    {"_cpp11armadillotest_mean1_",                        (DL_FUNC) &_cpp11armadillotest_mean1_,                        2},
    {"_cpp11armadillotest_median1_",                      (DL_FUNC) &_cpp11armadillotest_median1_,                      2},
    {"_cpp11armadillotest_memptr1_",                      (DL_FUNC) &_cpp11armadillotest_memptr1_,                      1},
    {"_cpp11armadillotest_misc1_",                        (DL_FUNC) &_cpp11armadillotest_misc1_,                        1},
    {"_cpp11armadillotest_nonzeros1_",                    (DL_FUNC) &_cpp11armadillotest_nonzeros1_,                    1},
    {"_cpp11armadillotest_norm1_",                        (DL_FUNC) &_cpp11armadillotest_norm1_,                        1},
    {"_cpp11armadillotest_norm2est1_",                    (DL_FUNC) &_cpp11armadillotest_norm2est1_,                    1},
    {"_cpp11armadillotest_normalise1_",                   (DL_FUNC) &_cpp11armadillotest_normalise1_,                   1},
    {"_cpp11armadillotest_ols_",                          (DL_FUNC) &_cpp11armadillotest_ols_,                          2},
    {"_cpp11armadillotest_ols_dbl",                       (DL_FUNC) &_cpp11armadillotest_ols_dbl,                       2},
    {"_cpp11armadillotest_ols_mat",                       (DL_FUNC) &_cpp11armadillotest_ols_mat,                       2},
    {"_cpp11armadillotest_ols_qr_dbl",                    (DL_FUNC) &_cpp11armadillotest_ols_qr_dbl,                    3},
    {"_cpp11armadillotest_ols_qr_mat",                    (DL_FUNC) &_cpp11armadillotest_ols_qr_mat,                    3},
    {"_cpp11armadillotest_ones1_",                        (DL_FUNC) &_cpp11armadillotest_ones1_,                        1},
    {"_cpp11armadillotest_ones2_",                        (DL_FUNC) &_cpp11armadillotest_ones2_,                        1},
    {"_cpp11armadillotest_poisson_",                      (DL_FUNC) &_cpp11armadillotest_poisson_,                      2},
    {"_cpp11armadillotest_pow1_",                         (DL_FUNC) &_cpp11armadillotest_pow1_,                         1},
    {"_cpp11armadillotest_powmat1_",                      (DL_FUNC) &_cpp11armadillotest_powmat1_,                      1},
    {"_cpp11armadillotest_prod1_",                        (DL_FUNC) &_cpp11armadillotest_prod1_,                        1},
    {"_cpp11armadillotest_randg3_",                       (DL_FUNC) &_cpp11armadillotest_randg3_,                       1},
    {"_cpp11armadillotest_randn1_",                       (DL_FUNC) &_cpp11armadillotest_randn1_,                       1},
    {"_cpp11armadillotest_randn2_",                       (DL_FUNC) &_cpp11armadillotest_randn2_,                       1},
    {"_cpp11armadillotest_randn3_",                       (DL_FUNC) &_cpp11armadillotest_randn3_,                       1},
    {"_cpp11armadillotest_random_matrix_nxn",             (DL_FUNC) &_cpp11armadillotest_random_matrix_nxn,             1},
    {"_cpp11armadillotest_randperm1_",                    (DL_FUNC) &_cpp11armadillotest_randperm1_,                    2},
    {"_cpp11armadillotest_randu1_",                       (DL_FUNC) &_cpp11armadillotest_randu1_,                       1},
    {"_cpp11armadillotest_randu2_",                       (DL_FUNC) &_cpp11armadillotest_randu2_,                       1},
    {"_cpp11armadillotest_randu3_",                       (DL_FUNC) &_cpp11armadillotest_randu3_,                       1},
    {"_cpp11armadillotest_range1_",                       (DL_FUNC) &_cpp11armadillotest_range1_,                       2},
    {"_cpp11armadillotest_rank1_",                        (DL_FUNC) &_cpp11armadillotest_rank1_,                        1},
    {"_cpp11armadillotest_rcond1_",                       (DL_FUNC) &_cpp11armadillotest_rcond1_,                       1},
    {"_cpp11armadillotest_regspace1_",                    (DL_FUNC) &_cpp11armadillotest_regspace1_,                    1},
    {"_cpp11armadillotest_repelem1_",                     (DL_FUNC) &_cpp11armadillotest_repelem1_,                     1},
    {"_cpp11armadillotest_replace1_",                     (DL_FUNC) &_cpp11armadillotest_replace1_,                     1},
    {"_cpp11armadillotest_repmat1_",                      (DL_FUNC) &_cpp11armadillotest_repmat1_,                      1},
    {"_cpp11armadillotest_reset1_",                       (DL_FUNC) &_cpp11armadillotest_reset1_,                       1},
    {"_cpp11armadillotest_reshape1_",                     (DL_FUNC) &_cpp11armadillotest_reshape1_,                     1},
    {"_cpp11armadillotest_reshape2_",                     (DL_FUNC) &_cpp11armadillotest_reshape2_,                     1},
    {"_cpp11armadillotest_resize1_",                      (DL_FUNC) &_cpp11armadillotest_resize1_,                      1},
    {"_cpp11armadillotest_resize2_",                      (DL_FUNC) &_cpp11armadillotest_resize2_,                      1},
    {"_cpp11armadillotest_reverse1_",                     (DL_FUNC) &_cpp11armadillotest_reverse1_,                     1},
    {"_cpp11armadillotest_roots1_",                       (DL_FUNC) &_cpp11armadillotest_roots1_,                       1},
    {"_cpp11armadillotest_row1_",                         (DL_FUNC) &_cpp11armadillotest_row1_,                         2},
    {"_cpp11armadillotest_row_as_mat1_",                  (DL_FUNC) &_cpp11armadillotest_row_as_mat1_,                  1},
    {"_cpp11armadillotest_set_imag1_",                    (DL_FUNC) &_cpp11armadillotest_set_imag1_,                    1},
    {"_cpp11armadillotest_set_real1_",                    (DL_FUNC) &_cpp11armadillotest_set_real1_,                    1},
    {"_cpp11armadillotest_set_real2_",                    (DL_FUNC) &_cpp11armadillotest_set_real2_,                    1},
    {"_cpp11armadillotest_set_size1_",                    (DL_FUNC) &_cpp11armadillotest_set_size1_,                    1},
    {"_cpp11armadillotest_shed_columns1_",                (DL_FUNC) &_cpp11armadillotest_shed_columns1_,                1},
    {"_cpp11armadillotest_shed_rows1_",                   (DL_FUNC) &_cpp11armadillotest_shed_rows1_,                   1},
    {"_cpp11armadillotest_shed_slices1_",                 (DL_FUNC) &_cpp11armadillotest_shed_slices1_,                 1},
    {"_cpp11armadillotest_shift1_",                       (DL_FUNC) &_cpp11armadillotest_shift1_,                       1},
    {"_cpp11armadillotest_shuffle1_",                     (DL_FUNC) &_cpp11armadillotest_shuffle1_,                     1},
    {"_cpp11armadillotest_size1_",                        (DL_FUNC) &_cpp11armadillotest_size1_,                        1},
    {"_cpp11armadillotest_sort1_",                        (DL_FUNC) &_cpp11armadillotest_sort1_,                        1},
    {"_cpp11armadillotest_sort_index1_",                  (DL_FUNC) &_cpp11armadillotest_sort_index1_,                  1},
    {"_cpp11armadillotest_spdiags1_",                     (DL_FUNC) &_cpp11armadillotest_spdiags1_,                     1},
    {"_cpp11armadillotest_speye1_",                       (DL_FUNC) &_cpp11armadillotest_speye1_,                       1},
    {"_cpp11armadillotest_spones1_",                      (DL_FUNC) &_cpp11armadillotest_spones1_,                      1},
    {"_cpp11armadillotest_sprandn1_",                     (DL_FUNC) &_cpp11armadillotest_sprandn1_,                     1},
    {"_cpp11armadillotest_sprandu1_",                     (DL_FUNC) &_cpp11armadillotest_sprandu1_,                     1},
    {"_cpp11armadillotest_sqrtmat1_",                     (DL_FUNC) &_cpp11armadillotest_sqrtmat1_,                     1},
    {"_cpp11armadillotest_sqrtmat_sympd1_",               (DL_FUNC) &_cpp11armadillotest_sqrtmat_sympd1_,               1},
    {"_cpp11armadillotest_stddev1_",                      (DL_FUNC) &_cpp11armadillotest_stddev1_,                      2},
    {"_cpp11armadillotest_sub2ind1_",                     (DL_FUNC) &_cpp11armadillotest_sub2ind1_,                     1},
    {"_cpp11armadillotest_subview1_",                     (DL_FUNC) &_cpp11armadillotest_subview1_,                     1},
    {"_cpp11armadillotest_subview2_",                     (DL_FUNC) &_cpp11armadillotest_subview2_,                     1},
    {"_cpp11armadillotest_sum1_",                         (DL_FUNC) &_cpp11armadillotest_sum1_,                         1},
    {"_cpp11armadillotest_sum2_",                         (DL_FUNC) &_cpp11armadillotest_sum2_,                         1},
    {"_cpp11armadillotest_swap1_",                        (DL_FUNC) &_cpp11armadillotest_swap1_,                        1},
    {"_cpp11armadillotest_swap_columns1_",                (DL_FUNC) &_cpp11armadillotest_swap_columns1_,                1},
    {"_cpp11armadillotest_swap_rows1_",                   (DL_FUNC) &_cpp11armadillotest_swap_rows1_,                   1},
    {"_cpp11armadillotest_symmatu1_",                     (DL_FUNC) &_cpp11armadillotest_symmatu1_,                     1},
    {"_cpp11armadillotest_toeplitz1_",                    (DL_FUNC) &_cpp11armadillotest_toeplitz1_,                    1},
    {"_cpp11armadillotest_trace1_",                       (DL_FUNC) &_cpp11armadillotest_trace1_,                       1},
    {"_cpp11armadillotest_trans1_",                       (DL_FUNC) &_cpp11armadillotest_trans1_,                       1},
    {"_cpp11armadillotest_transform1_",                   (DL_FUNC) &_cpp11armadillotest_transform1_,                   1},
    {"_cpp11armadillotest_transpose1_",                   (DL_FUNC) &_cpp11armadillotest_transpose1_,                   1},
    {"_cpp11armadillotest_transpose2_",                   (DL_FUNC) &_cpp11armadillotest_transpose2_,                   1},
    {"_cpp11armadillotest_trapz1_",                       (DL_FUNC) &_cpp11armadillotest_trapz1_,                       1},
    {"_cpp11armadillotest_trig1_",                        (DL_FUNC) &_cpp11armadillotest_trig1_,                        1},
    {"_cpp11armadillotest_trimatu1_",                     (DL_FUNC) &_cpp11armadillotest_trimatu1_,                     1},
    {"_cpp11armadillotest_trimatu_ind1_",                 (DL_FUNC) &_cpp11armadillotest_trimatu_ind1_,                 1},
    {"_cpp11armadillotest_typedef_Col_double",            (DL_FUNC) &_cpp11armadillotest_typedef_Col_double,            1},
    {"_cpp11armadillotest_typedef_Col_int",               (DL_FUNC) &_cpp11armadillotest_typedef_Col_int,               1},
    {"_cpp11armadillotest_typedef_Mat_double",            (DL_FUNC) &_cpp11armadillotest_typedef_Mat_double,            1},
    {"_cpp11armadillotest_typedef_Mat_int",               (DL_FUNC) &_cpp11armadillotest_typedef_Mat_int,               1},
    {"_cpp11armadillotest_typedef_SpMat_double",          (DL_FUNC) &_cpp11armadillotest_typedef_SpMat_double,          1},
    {"_cpp11armadillotest_typedef_SpMat_int",             (DL_FUNC) &_cpp11armadillotest_typedef_SpMat_int,             1},
    {"_cpp11armadillotest_typedef_uvec",                  (DL_FUNC) &_cpp11armadillotest_typedef_uvec,                  1},
    {"_cpp11armadillotest_unique1_",                      (DL_FUNC) &_cpp11armadillotest_unique1_,                      1},
    {"_cpp11armadillotest_var1_",                         (DL_FUNC) &_cpp11armadillotest_var1_,                         2},
    {"_cpp11armadillotest_vecnorm1_",                     (DL_FUNC) &_cpp11armadillotest_vecnorm1_,                     1},
    {"_cpp11armadillotest_vectorise1_",                   (DL_FUNC) &_cpp11armadillotest_vectorise1_,                   1},
    {"_cpp11armadillotest_zeros1_",                       (DL_FUNC) &_cpp11armadillotest_zeros1_,                       1},
    {"_cpp11armadillotest_zeros2_",                       (DL_FUNC) &_cpp11armadillotest_zeros2_,                       1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_cpp11armadillotest(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
