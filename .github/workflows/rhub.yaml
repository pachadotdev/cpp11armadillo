# R-hub's generic GitHub Actions workflow file. It's canonical location is at
# https://github.com/r-hub/actions/blob/v1/workflows/rhub.yaml
# You can update this file to a newer version using the rhub2 package:
#
# rhub::rhub_setup()
#
# It is unlikely that you need to modify this file manually.

name: R-hub
run-name: "${{ github.event.inputs.id || 'R-hub check' }}: ${{ github.event.inputs.name || format('Running tests - triggered by {0}', github.triggering_actor) }}"

on:
  workflow_dispatch:
    inputs:
      config:
        description: 'Address sanitizers'
        type: string
        default: 'm1-san,clang-asan,clang-ubsan,valgrind'
      name:
        description: 'UBSAN and other CRAN checks'
        type: string
      id:
        description: 'CRAN-checks'
        type: string
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      containers: ${{ steps.rhub-setup.outputs.containers }}
      platforms: ${{ steps.rhub-setup.outputs.platforms }}

    steps:
    # NO NEED TO CHECKOUT HERE
    - uses: r-hub/actions/setup@v1
      with:
        config: ${{ github.event.inputs.config }}
      id: rhub-setup
    - name: Debug setup outputs
      run: |
        echo "Containers: ${{ steps.rhub-setup.outputs.containers }}"
        echo "Platforms: ${{ steps.rhub-setup.outputs.platforms }}"

  linux-containers:
    needs: setup
    if: ${{ needs.setup.outputs.containers != '[]' }}
    runs-on: ubuntu-latest
    name: "Linux: ${{ matrix.config.label || 'Container check' }}"
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.setup.outputs.containers) }}
    container:
      image: ${{ matrix.config.container }}

    steps:
      - uses: r-hub/actions/checkout@v1
      - name: Debug configuration
        run: echo "Running with config ${{ toJson(matrix.config) }}"
      - uses: r-hub/actions/platform-info@v1
        with:
          token: ${{ secrets.RHUB_TOKEN }}
          job-config: ${{ matrix.config.job-config }}
      - uses: r-hub/actions/setup-deps@v1
        with:
          token: ${{ secrets.RHUB_TOKEN }}
          job-config: ${{ matrix.config.job-config }}
      - uses: r-hub/actions/run-check@v1
        with:
          token: ${{ secrets.RHUB_TOKEN }}
          job-config: ${{ matrix.config.job-config }}
      - name: Install cpp11armadillotest
        run: |
          options(warn = 2)
          pak::local_install_dev_deps("cpp11armadillotest", dependencies = TRUE)
          install.packages(".", repos = NULL, type = "source")
          install.packages("cpp11armadillotest", repos = NULL, INSTALL_opts = "--install-tests", type = "source")
        shell: Rscript {0}
      - name: Run cpp11armadillotest tests
        run: |
          setwd("cpp11armadillotest/tests")
          library(testthat)
          library(cpp11armadillotest)
          test_check("cpp11armadillotest", reporter = "progress")
        shell: Rscript {0}

  other-platforms:
    needs: setup
    if: ${{ needs.setup.outputs.platforms != '[]' }}
    runs-on: ${{ matrix.config.os }}
    name: "Platform: ${{ matrix.config.label || matrix.config.os || 'Other platform check' }}"
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.setup.outputs.platforms) }}

    steps:
      - uses: r-hub/actions/checkout@v1
      - name: Debug configuration
        run: echo "Running with config ${{ toJson(matrix.config) }}"
      - uses: r-hub/actions/setup-r@v1
        with:
          job-config: ${{ matrix.config.job-config }}
          token: ${{ secrets.RHUB_TOKEN }}
      - uses: r-hub/actions/platform-info@v1
        with:
          token: ${{ secrets.RHUB_TOKEN }}
          job-config: ${{ matrix.config.job-config }}
      - uses: r-hub/actions/setup-deps@v1
        with:
          job-config: ${{ matrix.config.job-config }}
          token: ${{ secrets.RHUB_TOKEN }}
      - uses: r-hub/actions/run-check@v1
        with:
          job-config: ${{ matrix.config.job-config }}
          token: ${{ secrets.RHUB_TOKEN }}
      - name: Install cpp11armadillotest
        run: |
          options(warn = 2)
          pak::local_install_dev_deps("cpp11armadillotest", dependencies = TRUE)
          install.packages(".", repos = NULL, type = "source")
          install.packages("cpp11armadillotest", repos = NULL, INSTALL_opts = "--install-tests", type = "source")
        shell: Rscript {0}
      - name: Run cpp11armadillotest tests
        run: |
          setwd("cpp11armadillotest/tests")
          library(testthat)
          library(cpp11armadillotest)
          test_check("cpp11armadillotest", reporter = "progress")
        shell: Rscript {0}
        