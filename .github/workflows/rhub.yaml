name: Sanitizer Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions: read-all

jobs:
  sanitizer-checks:
    runs-on: ubuntu-latest
    name: "${{ matrix.config.name }}"
    
    strategy:
      fail-fast: false
      matrix:
        config:
          - {name: 'ASAN/UBSAN', container: 'ghcr.io/r-hub/containers/clang-asan:latest'}
          - {name: 'Valgrind', container: 'ghcr.io/r-hub/containers/valgrind:latest'}
          - {name: 'UBSAN', container: 'ghcr.io/r-hub/containers/clang-ubsan:latest'}
        
    container:
      image: ${{ matrix.config.container }}
      
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_FORCE_SUGGESTS_: false

    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libgit2-dev \
            pandoc
          
      - name: Install R dependencies
        run: |
          install.packages(c("pak", "remotes", "rcmdcheck", "testthat"))
          pak::local_install_deps(".", dependencies = TRUE)
          if (dir.exists("cpp11armadillotest")) {
            pak::local_install_deps("cpp11armadillotest", dependencies = TRUE)
          }
        shell: Rscript {0}
        
      - name: Build and install main package
        run: |
          R CMD build .
          R CMD INSTALL *.tar.gz
        
      - name: Build and install cpp11armadillotest
        run: |
          if [ -d "cpp11armadillotest" ]; then
            R CMD build cpp11armadillotest
            R CMD INSTALL --install-tests cpp11armadillotest*.tar.gz
          fi
        
      - name: Run R CMD check
        run: |
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), 
                               error_on = "warning", 
                               check_dir = "check")
        shell: Rscript {0}
        
      - name: Run cpp11armadillotest tests
        run: |
          if (dir.exists("cpp11armadillotest/tests")) {
            setwd("cpp11armadillotest/tests")
            library(testthat)
            library(cpp11armadillotest)
            test_check("cpp11armadillotest", reporter = "progress")
          }
        shell: Rscript {0}
        
      - name: Show check results
        if: always()
        run: |
          find check -name '*.Rout*' -exec echo "=== {} ===" \; -exec cat {} \;
        
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.name }}-results
          path: check
          