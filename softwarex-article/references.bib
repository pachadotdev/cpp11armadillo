@article{sanderson2016,
  doi = {10.21105/joss.00026},
  url = {https://doi.org/10.21105/joss.00026},
  year = {2016},
  publisher = {The Open Journal},
  volume = {1},
  number = {2},
  pages = {26},
  author = {Conrad Sanderson and Ryan Curtin},
  title = {Armadillo: a template-based {C++} library for linear algebra},
  journal = {Journal of Open Source Software}
}

@article{eddelbuettel2014,
	title = {{rcpparmadillo}: {Accelerating} {R} with high-performance {C++} linear algebra},
	volume = {71},
	issn = {0167-9473},
	url = {https://www.sciencedirect.com/science/article/pii/S0167947313000492},
	doi = {10.1016/j.csda.2013.02.005},
	urldate = {2024-02-03},
	journal = {Computational Statistics \& Data Analysis},
	author = {Dirk Eddelbuettel and Conrad Sanderson},
	month = {Mar},
	year = {2014},
	keywords = {{C++}, Linear algebra, R, Software},
	pages = {1054--1063}
}

@article{wickham2019,
  doi = {10.21105/joss.01686},
  url = {https://doi.org/10.21105/joss.01686},
  year = {2019},
  publisher = {The Open Journal},
  volume = {4},
  number = {43},
  pages = {1686},
  author = {Hadley Wickham and Mara Averick and Jennifer Bryan and Winston Chang and Lucy D'Agostino McGowan and Romain François and Garrett Grolemund and Alex Hayes and Lionel Henry and Jim Hester and Max Kuhn and Thomas Lin Pedersen and Evan Miller and Stephan Milton Bache and Kirill Müller and Jeroen Ooms and David Robinson and Dana Paige Seidel and Vitalie Spinu and Kohske Takahashi and Davis Vaughan and Claus Wilke and Kara Woo and Hiroaki Yutani},
  title = {Welcome to the Tidyverse},
  journal = {Journal of Open Source Software}
}

@book{burns2011,
  title={The {R} inferno},
  author={Burns, Patrick},
  year={2011},
  publisher={Lulu}
}

@Manual{cpp11,
  title = {{cpp11}: A {C++}11 Interface for {R}'s {C} Interface},
  author = {Davis Vaughan and Jim Hester and Romain François},
  year = {2023},
  note = {{R} package version 0.4.7},
  url = {https://CRAN.R-project.org/package=cpp11},
}

@Manual{rpostgres,
  title = {{rpostgres}: {C++} Interface to PostgreSQL},
  author = {Hadley Wickham and Jeroen Ooms and Kirill Müller},
  year = {2023},
  note = {{R} package version 1.4.6},
  url = {https://CRAN.R-project.org/package=RPostgres},
}

@Manual{r2024,
  title = {{R}: A Language and Environment for Statistical Computing},
  author = {{R Core Team}},
  organization = {{R} Foundation for Statistical Computing},
  address = {Vienna, Austria},
  year = {2024},
  url = {https://www.R-project.org/},
}

@article{eddelbuettel2011,
	title = {Rcpp: {Seamless} {R} and {C++} {Integration}},
	volume = {40},
	copyright = {Copyright (c) 2010 Dirk Eddelbuettel, Romain Francois},
	issn = {1548-7660},
	shorttitle = {Rcpp},
	url = {https://doi.org/10.18637/jss.v040.i08},
	doi = {10.18637/jss.v040.i08},
	abstract = {The Rcpp package simplifies integrating {C++} code with R. It provides a consistent {C++} class hierarchy that maps various types of R objects (vectors, matrices, functions, environments, . . . ) to dedicated {C++} classes. Object interchange between R and {C++} is managed by simple, flexible and extensible concepts which include broad support for {C++} Standard Template Library idioms. {C++} code can both be compiled, linked and loaded on the fly, or added via packages. Flexible error and exception code handling is provided. Rcpp substantially lowers the barrier for programmers wanting to combine {C++} code with R.},
	language = {en},
	urldate = {2024-10-05},
	journal = {Journal of Statistical Software},
	author = {Eddelbuettel, Dirk and Francois, Romain},
	month = apr,
	year = {2011},
	pages = {1--18}
}

@misc{stroustrup2012,
	title = {Tour : {Standard} {C++}},
	url = {https://isocpp.org/tour},
	urldate = {2024-10-05},
	author = {Stroustrup, Bjarne},
	year = {2012}
}

@misc{stackoverflow2024,
	title = {{Stack} {Exchange} {Data} {Explorer}},
	url = {https://data.stackexchange.com/stackoverflow/query/new},
	urldate = {2024-10-05},
	author = {{Stack Overflow}},
	year = {2024}
}

@misc{go2024,
	title = {Go {Modules} {Reference}},
	url = {https://go.dev/ref/mod},
	language = {en},
	urldate = {2024-10-05},
	author = {{The Go Authors}},
	year = {2024}
}

@book{wickham2023,
  title={R packages},
  author={Wickham, Hadley and Bryan, Jennifer},
  year={2023},
  publisher={O'Reilly}
}

@inproceedings{kabir2024,
	address = {New York, NY, USA},
	series = {{CHI} '24},
	title = {Is {Stack} {Overflow} {Obsolete}? {An} {Empirical} {Study} of the {Characteristics} of {ChatGPT} {Answers} to {Stack} {Overflow} {Questions}},
	isbn = {9798400703300},
	shorttitle = {Is {Stack} {Overflow} {Obsolete}?},
	url = {https://dl.acm.org/doi/10.1145/3613904.3642596},
	doi = {10.1145/3613904.3642596},
	abstract = {Q\&amp;A platforms have been crucial for the online help-seeking behavior of programmers. However, the recent popularity of ChatGPT is altering this trend. Despite this popularity, no comprehensive study has been conducted to evaluate the characteristics of ChatGPT’s answers to programming questions. To bridge the gap, we conducted the first in-depth analysis of ChatGPT answers to 517 programming questions on Stack Overflow and examined the correctness, consistency, comprehensiveness, and conciseness of ChatGPT answers. Furthermore, we conducted a large-scale linguistic analysis, as well as a user study, to understand the characteristics of ChatGPT answers from linguistic and human aspects. Our analysis shows that 52\% of ChatGPT answers contain incorrect information and 77\% are verbose. Nonetheless, our user study participants still preferred ChatGPT answers 35\% of the time due to their comprehensiveness and well-articulated language style. However, they also overlooked the misinformation in the ChatGPT answers 39\% of the time. This implies the need to counter misinformation in ChatGPT answers to programming questions and raise awareness of the risks associated with seemingly correct answers.},
	urldate = {2024-10-23},
	booktitle = {Proceedings of the 2024 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Kabir, Samia and Udo-Imeh, David N. and Kou, Bonan and Zhang, Tianyi},
	month = may,
	year = {2024},
	pages = {1--17}
}

@misc{armadillo2024,
	title = {Armadillo: {C++} library for linear algebra \& scientific computing},
	url = {https://arma.sourceforge.net/speed.html},
	urldate = {2024-10-24},
	author = {Sanderson, Conrad},
	year = {2024}
}

@article{sanderson2019,
  title={Practical sparse matrices in {C++} with hybrid storage and template-based expression optimisation},
  author={Sanderson, Conrad and Curtin, Ryan},
  journal={Mathematical and Computational Applications},
  volume={24},
  number={3},
  pages={70},
  year={2019},
  publisher={MDPI}
}

@article{beyer2019,
	title = {Reliable benchmarking: requirements and solutions},
	volume = {21},
	issn = {1433-2787},
	shorttitle = {Reliable benchmarking},
	url = {https://doi.org/10.1007/s10009-017-0469-y},
	doi = {10.1007/s10009-017-0469-y},
	abstract = {Benchmarking is a widely used method in experimental computer science, in particular, for the comparative evaluation of tools and algorithms. As a consequence, a number of questions need to be answered in order to ensure proper benchmarking, resource measurement, and presentation of results, all of which is essential for researchers, tool developers, and users, as well as for tool competitions. We identify a set of requirements that are indispensable for reliable benchmarking and resource measurement of time and memory usage of automatic solvers, verifiers, and similar tools, and discuss limitations of existing methods and benchmarking tools. Fulfilling these requirements in a benchmarking framework can (on Linux systems) currently only be done by using the cgroup and namespace features of the kernel. We developed BenchExec, a ready-to-use, tool-independent, and open-source implementation of a benchmarking framework that fulfills all presented requirements, making reliable benchmarking and resource measurement easy. Our framework is able to work with a wide range of different tools, has proven its reliability and usefulness in the International Competition on Software Verification, and is used by several research groups worldwide to ensure reliable benchmarking. Finally, we present guidelines on how to present measurement results in a scientifically valid and comprehensible way.},
	language = {en},
	number = {1},
	urldate = {2024-11-25},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Beyer, Dirk and Löwe, Stefan and Wendler, Philipp},
	month = feb,
	year = {2019},
	keywords = {Benchmarking, Competition, Container, Process control, Process isolation, Resource measurement},
	pages = {1--29}
}
